<<<<<<< HEAD
# P(EXCELENTE ∩ BAJO) = (EXCELENTE) * P(BAJO) =
# P(EXCELENTE ∩ BAJO) = (EXCELENTE) * P(BAJO) =
source('/media/sda3/Users/jose/Documents/GitHub/MTI_II/caso_ii.R')
# Seleccionamos el archivo
filename <- file.choose()
# Cargamos el archivo como CSV
data <- read.csv(filename,sep=" ", header=TRUE)
# Seleccionamos la variable x
x <- data$x
#------------------------------------------------------------------------------
# Tarea I
#------------------------------------------------------------------------------
# Definimos un array con las categorías
categories <- c("EXCELENTE", "BUENA", "MALA")
# Contamos el número de datos
n <- length(x)
# Definimos un vector para contar el número de datos de cada categoria
categories_count <- c(0,0,0)
# Recorremos el array
for(i in 1:n) {
if(x[i] <= 2){ # Si la categia es EXCELENTE, aumentamos en 1 la cuenta
categories_count[1] <- categories_count[1] + 1
}else if(x[i] == 3 | x[i] == 4){ # Si la categia es BUENA, aumentamos en 1 la cuenta
categories_count[2] <- categories_count[2] + 1
}else if(x[i] >= 5){ # Si la categia es MALA, aumentamos en 1 la cuenta
categories_count[3] <- categories_count[3] + 1
}
}
# Calculamos los porcentajes de cada categoría
categories_percentage <- categories_count/n*100
# Contamos la frecuencia de cada valor
freuencies <- table(x)
# Calculamos la probabilidad de un cliente más de 7 intentos para conectarse
# a la web P(#intentos > 7) = 1 - P(#intentos <= 6) = 1 - [ P(#intentos = 1)
# + P(#intentos = 2) + P(#intentos = 3) + P(#intentos = 4) + P(#intentos = 5)
# + P(#intentos = 6) ]
1 - sum(table(x)/n)
#------------------------------------------------------------------------------
# Tarea II
#------------------------------------------------------------------------------
# Definimos la distribución normal con paramétros media = 250 y desviación
# típica 60
mean <- 250
sd <- 60
# Calculamos los los percentiles 100/3 y 200/3
p1 <- qnorm(1/3, 250, 60)
p2 <- qnorm(2/3, 250, 60)
# Dibujamos la distribución
curve(xlim=c(mean-6*sd, mean+6*sd), dnorm(x,mean,sd), lwd=0, main="Función de
densidad la variable W = \"número de KB transmitidos \" ~ N(250, 60)", xlab="Tráfico
transmitido (KB)", ylab="Probabilidad")
# Dibujamos las regiones "Tráfico bajo", "Tráfico medio" y "Tráfico alto"
cords1.x <- c(mean-6*sd, seq(mean-6*sd, p1, 0.01), p1)
cords1.y <- c(0, dnorm(seq(mean-6*sd, p1, 0.01), mean, sd), 0)
polygon(cords1.x,cords1.y,col='green', border=NA)
cords2.x <- c(p1, seq(p1, p2, 0.01), p2)
cords2.y <- c(0, dnorm(seq(p1, p2, 0.01), mean, sd), 0)
polygon(cords2.x,cords2.y,col='orange', border=NA)
cords3.x <- c(p2, seq(p2, mean+6*sd, 0.01), mean+6*sd)
cords3.y <- c(0, dnorm(seq(p2, mean+6*sd, 0.01), mean, sd), 0)
polygon(cords3.x,cords3.y,col='red', border=NA)
# Comprobamos si efectivamente las zonas tienen un tercio de probabilidad cada
# una. Para ello, simulamos 100000 muestras de nuestra distribución y contamos
# cuántas están cada de las zonas, y calculamos el porcentaje de cada ellas.
n_samples = 100000
samples <- rnorm(n_samples, mean, sd)
samples_BAJO = sum(samples <= p1)
samples_MEDIO = sum(samples > p1 & samples < p2)
samples_ALTO = sum(samples >= p2)
samples_percentages <- c(samples_BAJO, samples_MEDIO, samples_ALTO)/n_samples*100
# Probabilidad de un cliente tenga una conexión MALA y haya generado un tráfico
# BAJO
# P(MALA ∩ BAJO) = P(MALA) * P(BAJO) puesto que dice el enunciado que son
# independientes
# P(MALA ∩ BAJO) = P(MALA) * P(BAJO) = 0.7 * P(W <= p1 = 224.15)
(categories_percentage[3]/100) * pnorm(p1, mean, sd)
# Probabilidad de que, de 10 clientes seleccionados al azar, al menos 9 de ellos
# tengan conexión BUENA o EXCELENTE
# Primero calculamos la probabilidad de que se tenga una conexión BUENA o EXCELENTE.
# Es decir, P(BUENA ∪ EXCELENTE) = P(BUENA) + P(EXCELENTE) - P(BUENA ∩ EXCELENTE)
# = P(BUENA) + P(EXCELENTE), puesto que tener conexión BUENA y tener conexión
# EXCELENTE son sucesos disjuntos.
# P(BUENA ∪ EXCELENTE) = P(BUENA) + P(EXCELENTE)
p <- (categories_percentage[2]/100) + (categories_percentage[1]/100)
# Una vez que hemos calculado esta probabilidad, calculamos la probabilidad de que al
# menos 9 de 10 clientes elegidos al azar tengan una conexión BUENA o EXCELENTE
# En este caso tenemos una distribución binomial con n = 10 y p = 0.96, calculada
# anteriormente
# P(número de clientes con conexión BUENA o EXCELENTE >= 9)
# = 1 - P(número de clientes con conexión BUENA o EXCELENTE < 9) =
# = 1 - P(número de clientes con conexión BUENA o EXCELENTE <= 8)
1 - pbinom(8, 10, p)
# Probabilidad de que, de 10 clientes seleccionados al azar, no haya ninguno
# que tenga conexión EXCELENTE y haya generado un tráfico BAJO.
# Calculamos la probabilidad de que haya un cliente que tenga conexión EXCELENTE
# y haya generado un tráfico BAJO.
# P(EXCELENTE ∩ BAJO) = P(EXCELENTE) * P(BAJO), puesto que, según el enunciado,
# los sucesos son independientes.
# P(EXCELENTE ∩ BAJO) = (EXCELENTE) * P(BAJO) =
#------------------------------------------------------------------------------
# Tarea III
#------------------------------------------------------------------------------
(categories_percentage[1]/100) * pnorm(p1, mean, sd)
dbinom(0, 10, q)
?dbinom
dbinom(5, 20, 0.4)
dbinom(0, 10, q)
q
q <- (categories_percentage[1]/100) * pnorm(p1, mean, sd)
q
dbinom(0, 10, q)
C1 = 0.4
C2 = 0.3
C3 = 0.2
C4 = 0.1
C1_NC = 0.01
C2_NC = 0.02
C3_NC = 0.07
C4_NC = 0.04
# Probabilidad de que se haya contestado al cuestionario, si se elige un
# cliente al azar
# Aplicando el teorema de la probabilidad total, la probabilidad pedida es
C1 * C1_NC + C2 * C2_NC + C3 * C3_NC + C4 * C4_NC
C1 * (1 - C1_NC) + C2 * (1 - C2_NC) + C3 * (1 - C3_NC) + C4 * (1 - C4_NC)
0.972+0.028
0.4*0.99+0.3*0.98+0.2*0.93+0.1*0.96
q2 <- C1 * C1_NC + C2 * C2_NC + C3 * C3_NC + C4 * C4_NC
q2
dbinom(0, 4, q2)
dbinom(0, 200, q2)
1 - dbinom(0, 4, q2)
# Si cambiamos 4 por 200, la probabilidad es
1 - dbinom(0, 200, q2)
0.4*0.01
0.3*0.02
0.7*0.02
0.1*0.04
0.01*0.4/0.028
0.02*0.3/0.028
0.07*0.2/0.028
0.04*0.1/0.028
c <- c(C1, C2, C3, C4)
c
c_NC <- c(C1_NC, C2_NC, C3_NC, C1_NC)
c_NC
NC <- C1 * (1 - C1_NC) + C2 * (1 - C2_NC) + C3 * (1 - C3_NC) + C4 * (1 - C4_NC)
NC
1-ans
1-[1]
bayes <- q_2*c*c_NC
bayes <- q2*c*c_NC
bayes
q2
c
c_NC
0.4*0.01/0.028
bayes <- c*c_NC/q2
bayes
0.1*0.04/0.028
c <- c(C1, C2, C3, C4)
c_NC <- c(C1_NC, C2_NC, C3_NC, C4_NC)
bayes <- c*c_NC/q2
bayes
freuencies
p1
p2
pnorm(p1, mean, sd)
pnorm(p1, mean, sd)*0.7
(categories_percentage[3]/100) * pnorm(p1, mean, sd)
pnorm(p1, mean, sd)*0.04
pnorm(p1, mean, sd)
p <- (categories_percentage[2]/100) + (categories_percentage[1]/100)
p
pbinom(8, 10, p)
1 - pbinom(8, 10, p)
norm(p1, mean, sd)
sd
pnorm(p1, mean, sd)
0.7*1/3
(categories_percentage[1]/100) * pnorm(p1, mean, sd)
dbinom(0, 10, q)
C1 * (1 - C1_NC) + C2 * (1 - C2_NC) + C3 * (1 - C3_NC) + C4 * (1 - C4_NC)
dbinom(0, 4, q2)
1 - dbinom(0, 4, q2)
dbinom(0, 200, q2)
1 - dbinom(0, 200, q2)
=======
plot(x,y, xlim = c(-1,6), ylim = c(-1,6), xlab = "X_3", ylab="X_2")
par(new = TRUE)
plot(x2,y2, xlim = c(-1,6), ylim = c(-1,6), type = "l", xaxt='n', ann=FALSE)
0.28+0.16
polygon(c(-1,6,6), c(-1,-1,6), col='skyblue', border=NA, add = TRUE)
plot(x2,y2, xlim = c(-1,6), ylim = c(-1,6), type = "l", xaxt='n', ann=FALSE)
# Dibujamos todos los posibles puntos en el plano
x <- c(-1, -1, -1,  0, 0, 0,  6, 6, 6)
y <- c(-1,  1,  3, -1, 1, 3, -1, 1, 3)
x2<-seq(-1,6)
y2<-seq(-1,6)
plot(x,y, xlim = c(-1,6), ylim = c(-1,6), xlab = "X_3", ylab="X_2")
par(new = TRUE)
plot(x2,y2, xlim = c(-1,6), ylim = c(-1,6), type = "l", xaxt='n', ann=FALSE)
polygon(c(-1,6,6), c(-1,-1,6), col='skyblue', border=NA, add = TRUE)
x <- c(-1, -1, -1,  0, 0, 0,  6, 6, 6)
y <- c(-1,  1,  3, -1, 1, 3, -1, 1, 3)
x2<-seq(-1,6)
y2<-seq(-1,6)
plot(x,y, xlim = c(-1,6), ylim = c(-1,6), xlab = "X_3", ylab="X_2")
par(new = TRUE)
plot(x2,y2, xlim = c(-1,6), ylim = c(-1,6), type = "l", xaxt='n', ann=FALSE)
polygon(c(-1,6,6), c(-1,-1,6), col='skyblue', border=NA, add = TRUE)
par(new = FALSE)
x <- c(-1, -1, -1,  0, 0, 0,  6, 6, 6)
y <- c(-1,  1,  3, -1, 1, 3, -1, 1, 3)
x2<-seq(-1,6)
y2<-seq(-1,6)
plot(x,y, xlim = c(-1,6), ylim = c(-1,6), xlab = "X_3", ylab="X_2")
par(new = TRUE)
plot(x2,y2, xlim = c(-1,6), ylim = c(-1,6), type = "l", xaxt='n', ann=FALSE)
polygon(c(-1,6,6), c(-1,-1,6), col='skyblue', border=NA)
par(new = FALSE)
x <- c(-1, -1, -1,  0, 0, 0,  6, 6, 6)
y <- c(-1,  1,  3, -1, 1, 3, -1, 1, 3)
x2<-seq(-1,6)
y2<-seq(-1,6)
plot(x,y, xlim = c(-1,6), ylim = c(-1,6), xlab = "X_3", ylab="X_2")
par(new = TRUE)
polygon(c(-1,6,6), c(-1,-1,6), col='skyblue', border=NA, add = TRUE)
plot(x2,y2, xlim = c(-1,6), ylim = c(-1,6), type = "l", xaxt='n', ann=FALSE)
par(new = FALSE)
x <- c(-1, -1, -1,  0, 0, 0,  6, 6, 6)
y <- c(-1,  1,  3, -1, 1, 3, -1, 1, 3)
x2<-seq(-1,6)
y2<-seq(-1,6)
plot(x,y, xlim = c(-1,6), ylim = c(-1,6), xlab = "X_3", ylab="X_2")
par(new = TRUE)
polygon(c(-1,6,6), c(-1,-1,6), col='skyblue', border=NA)
plot(x2,y2, xlim = c(-1,6), ylim = c(-1,6), type = "l", xaxt='n', ann=FALSE)
par(new = FALSE)
x <- c(-1, -1, -1,  0, 0, 0,  6, 6, 6)
y <- c(-1,  1,  3, -1, 1, 3, -1, 1, 3)
x2<-seq(-1,6)
y2<-seq(-1,6)
plot(x,y, xlim = c(-1,6), ylim = c(-1,6), xlab = "X_3", ylab="X_2")
par(new = TRUE)
plot(x2,y2, xlim = c(-1,6), ylim = c(-1,6), type = "l", xaxt='n', ann=FALSE)
polygon(c(-1,6,6), c(-1,-1,6), col='skyblue', border=NA)
par(new = FALSE)
x <- c(-1, -1, -1,  0, 0, 0,  6, 6, 6)
y <- c(-1,  1,  3, -1, 1, 3, -1, 1, 3)
x2<-seq(-1,6)
y2<-seq(-1,6)
plot(x,y, xlim = c(-1,6), ylim = c(-1,6), xlab = "X_3", ylab="X_2")
par(new = TRUE)
plot(x2,y2, xlim = c(-1,6), ylim = c(-1,6), type = "l", xaxt='n', ann=FALSE)
polygon(c(-1,6,6), c(-1,-1,6), col='skyblue', border=NA, alpha=0.1)
par(new = FALSE)
x <- c(-1, -1, -1,  0, 0, 0,  6, 6, 6)
y <- c(-1,  1,  3, -1, 1, 3, -1, 1, 3)
x2<-seq(-1,6)
y2<-seq(-1,6)
plot(x,y, xlim = c(-1,6), ylim = c(-1,6), xlab = "X_3", ylab="X_2")
par(new = TRUE)
plot(x2,y2, xlim = c(-1,6), ylim = c(-1,6), type = "l", xaxt='n', ann=FALSE)
polygon(c(-1,6,6), c(-1,-1,6), col=rgb(1, 0, 0,0.5), border=NA)
par(new = FALSE)
x <- c(-1, -1, -1,  0, 0, 0,  6, 6, 6)
y <- c(-1,  1,  3, -1, 1, 3, -1, 1, 3)
x2<-seq(-1,6)
y2<-seq(-1,6)
plot(x,y, xlim = c(-1,6), ylim = c(-1,6), xlab = "X_3", ylab="X_2")
par(new = TRUE)
plot(x2,y2, xlim = c(-1,6), ylim = c(-1,6), type = "l", xaxt='n', ann=FALSE)
polygon(c(-1,6,6), c(-1,-1,6), col=rgb(0, 191, 255,0.3), border=NA)
par(new = FALSE)
x <- c(-1, -1, -1,  0, 0, 0,  6, 6, 6)
y <- c(-1,  1,  3, -1, 1, 3, -1, 1, 3)
x2<-seq(-1,6)
y2<-seq(-1,6)
plot(x,y, xlim = c(-1,6), ylim = c(-1,6), xlab = "X_3", ylab="X_2")
par(new = TRUE)
plot(x2,y2, xlim = c(-1,6), ylim = c(-1,6), type = "l", xaxt='n', ann=FALSE)
polygon(c(-1,6,6), c(-1,-1,6), col=rgb(0, 191, 255,0.5), border=NA)
par(new = FALSE)
x <- c(-1, -1, -1,  0, 0, 0,  6, 6, 6)
y <- c(-1,  1,  3, -1, 1, 3, -1, 1, 3)
x2<-seq(-1,6)
y2<-seq(-1,6)
plot(x,y, xlim = c(-1,6), ylim = c(-1,6), xlab = "X_3", ylab="X_2")
par(new = TRUE)
plot(x2,y2, xlim = c(-1,6), ylim = c(-1,6), type = "l", xaxt='n', ann=FALSE)
polygon(c(-1,6,6), c(-1,-1,6), col=rgb(0, 191/255, 255/255,0.5), border=NA)
par(new = FALSE)
x <- c(-1, -1, -1,  0, 0, 0,  6, 6, 6)
y <- c(-1,  1,  3, -1, 1, 3, -1, 1, 3)
x2<-seq(-1,6)
y2<-seq(-1,6)
plot(x,y, xlim = c(-1,6), ylim = c(-1,6), xlab = "X_3", ylab="X_2")
par(new = TRUE)
plot(x2,y2, xlim = c(-1,6), ylim = c(-1,6), type = "l", xaxt='n', ann=FALSE)
polygon(c(-1,6,6), c(-1,-1,6), col=rgb(0, 191/255, 255/255,0.3), border=NA)
par(new = FALSE)
0.1+0.3*8
0.1+0.6*8
0.1+0.3*8
0.117*4.9 + 0.883*2.5
x<-seq(0,50, by = 0.01)
y<-(x<=1)*(0.1 + 0.6*1/8*exp(-x/8)) + (x>1)*(0.1+0.3*1/8*exp(-x/8))
plot(x,y)
samples<-rexp(1000,lambda)
sum(samples<=1)
sum(samples>=1)
sum(samples>1)
y<-(samples<=1)*(0.1 + 0.6*1/8*exp(-x/8)) + (samples>1)*(0.1+0.3*1/8*exp(-x/8))
y<-(samples<=1)*(0.1 + 0.6*1/8*exp(-samples/8)) + (samples>1)*(0.1+0.3*1/8*exp(-samples/8))
plot(samples, y)
sum(y)
mean(y)
var(y)
y<-(samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
mean(y)
0.117*4.9 + 0.883*2.5
0.6*64
0.3*64
0.117*38.4 + 0.883*19.4
0.36*64
0.3^2*64
0.6^2*64
var(y)
0.117*23.04 + 0.883*5.76
(0.117*23.04 + 0.883*5.76)^2*1000
sqrt(7781)
sqrt(7.781)
sd(y)
samples <- 1000
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost)
samples <- 1000
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost)
samples <- 1000
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost)
samples
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost)
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost)
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost)
mean(cost)
sd(cost)
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost)
mean(cost)
sd(cost)
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost)
mean(cost)
sd(cost)
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste")
mean(cost)
sd(cost)
sum(samples<=20)
sum(samples<=18.5)
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste")
mean(cost)
sd(cost)
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste")
mean(cost)
sd(cost)
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste")
mean(cost)
sd(cost)
sum(cost)
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
# Simulamos el coste diario de 1000 llamadas
samples <- rexp(1000, lambda)
cost <- (samples<=1)*(0.1 + 0.6*samples) + (samples>1)*(0.1+0.3*samples)
plot(samples, cost, xlab="Duración de la llamada", ylab = "Coste",
main = "Simulación del coste de 1000 llamadas")
mean(cost) # Media
sd(cost)   # Desviación típica
sum(cost)  # Coste total
x <- 0:100
y = 1.5*x
mean(y)
x <-
sdfsdf
ppois(0,1.5)
1-p(7,1.5)
ppois(7,1.5)
(1-0.2231)^6
?pbinom()
pbinom(0,6,0.2231)
ppois(7,1.5)
pbinom(6,6,0.2231)
pbinom(0,6,0.2231)
exp(-3/2)
exp(-3/2)*(3/2)^7/7!
exp(-3/2)*(3/2)^7/factorial(7)
ppois(7,1.5)
(exp(-3/2)*(3/2)^7)/factorial(7)
curve(xlim=c(0,10),dpois(x,3/2))
curve(dpois(x,3/2))
?dpois
curve(xlim=c(0,10),dpois(x,3/2))
warnings()
curve(xlim=seq(0,10,by=1),dpois(x,3/2))
curve(dpois(x,3/2))
x <-0:10
y <-dpois(x)
y <-dpois(x,lambda)
plot(x,y)
y <-ppois(x,lambda)
plot(x,y)
ppois(0, lambda)
ppois(0, lambda)
ppois(0,1.5)
ppois(0,3/2)
lambda <- 3/2
ppois(0, lambda)
ppois(7, lambda)
dpois(7, lambda)
1-ppois(7, lambda)
x<-rpois(6, 1.5)
x
mean(x)
x<-rpois(1000, 1.5)
sum(x=7)
mean(x)
7/1000*100
dpois(7, lambda)
dpois(7, lambda)
ppois(0, lambda)
?dbinom(6)
dbinom(0,6,0.2231)
pbinom(0,6,0.2231)
dbinom(0,6,0.2231)
dbinom(6,6,0.2231)
0.2231^6
>>>>>>> e31c4ee4e4d7ddc67cbe37b49493430d7702734e
